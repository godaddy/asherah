<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.godaddy.asherah</groupId>
  <artifactId>testapp</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <name>testapp</name>
  <url>http://maven.apache.org</url>

  <properties>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <appencryption.version>0.1.0</appencryption.version>
    <junit.jupiter.version>5.2.0</junit.jupiter.version>
    <junit.platform.version>1.2.0</junit.platform.version>
    <dropwizard.version>1.3.5</dropwizard.version>
    <sl4j.version>1.7.25</sl4j.version>
    <mysql.connector.java.version>8.0.13</mysql.connector.java.version>
    <com.zaxxer.hikaricp.version>2.6.1</com.zaxxer.hikaricp.version>
    <mockito.core.version>2.22.0</mockito.core.version>
    <elasticsearch.version>6.3.2</elasticsearch.version>
    <docker.image.src.root>images</docker.image.src.root>
    <docker.config.file>${env.DOCKER_CONFIG}/config.json</docker.config.file>
<!--    <docker.registry></docker.registry>-->
    <checkstyle.config>${project.basedir}/checkstyle.xml</checkstyle.config>
  </properties>
  <scm>
    <connection>scm:git:https://github.com/godaddy/asherah.git</connection>
    <developerConnection>scm:git:https://github.com/godaddy/asherah.git</developerConnection>
    <url>https://github.com/godaddy/asherah</url>
    <tag>HEAD</tag>
  </scm>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <configuration>
              <configLocation>${checkstyle.config}</configLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failOnViolation>true</failOnViolation>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.godaddy.asherah.testapp.TestAppRestMain</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
        <!-- Work-around for SUREFIRE-1588 debian openjdk classloading bug -->
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>${junit.platform.version}</version>
          </dependency>
          <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
        <configuration>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <!-- Allowing SNAPSHOT builds for now. Can refine if we do more intricate versioning/releasing later. -->
          <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>aws-java-sdk-kinesis</artifactId>
      <version>1.11.496</version>
      <exclusions>
        <exclusion>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
          <artifactId>jackson-dataformat-cbor</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.elasticsearch.client</groupId>
      <artifactId>elasticsearch-rest-high-level-client</artifactId>
      <version>${elasticsearch.version}</version>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-core</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>
    <dependency>
      <groupId>com.godaddy.asherah</groupId>
      <artifactId>appencryption</artifactId>
      <version>${appencryption.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>${junit.platform.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.core.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.core.version}</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.connector.java.version}</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${com.zaxxer.hikaricp.version}</version>
    </dependency>
<!--    Enable to run the DynamoDbGlobalTableTest-->
<!--    <dependency>-->
<!--      <groupId>com.almworks.sqlite4java</groupId>-->
<!--      <artifactId>sqlite4java</artifactId>-->
<!--      <version>1.0.392</version>-->
<!--      <scope>compile</scope>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>com.amazonaws</groupId>-->
<!--      <artifactId>DynamoDBLocal</artifactId>-->
<!--      <version>1.11.477</version>-->
<!--      <scope>compile</scope>-->
<!--      <exclusions>-->
<!--        <exclusion>-->
<!--          <groupId>org.eclipse.jetty</groupId>-->
<!--          <artifactId>jetty-server</artifactId>-->
<!--        </exclusion>-->
<!--      </exclusions>-->
<!--    </dependency>-->
  </dependencies>

<!--<repositories>-->
<!--  <repository>-->
<!--    <id>dynamodb-local</id>-->
<!--    <name>DynamoDB Local Release Repository</name>-->
<!--    <url>https://s3-us-west-2.amazonaws.com/dynamodb-local/release</url>-->
<!--  </repository>-->
<!--</repositories>-->

  <profiles>
    <profile>
      <id>build-docker</id>
      <activation>
        <property>
          <name>docker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>copy-resources</id>
                <phase>package</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/${docker.image.src.root}</outputDirectory>
                  <resources>
                    <!-- Copy entire Dockerfile image structure, except build -->
                    <resource>
                      <directory>${docker.image.src.root}</directory>
                      <exclude>**/build/**</exclude>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>1.4.10</version>
            <executions>
              <execution>
                <id>alpine</id>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <!-- <repository>${docker.registry}/${project.artifactId}/alpine</repository> -->
                  <dockerfile>${project.build.directory}/${docker.image.src.root}/alpine/Dockerfile</dockerfile>
                </configuration>
              </execution>
              <execution>
                <id>debian</id>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <!-- <repository>${docker.registry}/${project.artifactId}/debian</repository> -->
                  <dockerfile>${project.build.directory}/${docker.image.src.root}/debian/Dockerfile</dockerfile>
                </configuration>
              </execution>
              <execution>
                <id>ubuntu</id>
                <goals>
                  <goal>build</goal>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <!-- <repository>${docker.registry}/${project.artifactId}/ubuntu</repository> -->
                  <dockerfile>${project.build.directory}/${docker.image.src.root}/ubuntu/Dockerfile</dockerfile>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <tag>${project.version}</tag>
              <contextDirectory>${project.build.directory}</contextDirectory>
              <dockerConfigFile>${docker.config.file}</dockerConfigFile>
              <verbose>true</verbose>
              <skipDockerInfo>true</skipDockerInfo>
              <buildArgs>
                <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
              </buildArgs>
            </configuration>
          </plugin>
<!--          Enable to run the DynamoDbGlobalTableTest-->
<!--          <plugin>-->
<!--            <groupId>org.apache.maven.plugins</groupId>-->
<!--            <artifactId>maven-dependency-plugin</artifactId>-->
<!--            <version>2.10</version>-->
<!--            <executions>-->
<!--              <execution>-->
<!--                <id>copy</id>-->
<!--                <phase>test-compile</phase>-->
<!--                <goals>-->
<!--                  <goal>copy-dependencies</goal>-->
<!--                </goals>-->
<!--                <configuration>-->
<!--                  <includeTypes>so,dll,dylib</includeTypes>-->
<!--                  <outputDirectory>${project.build.directory}/native-libs</outputDirectory>-->
<!--                </configuration>-->
<!--              </execution>-->
<!--            </executions>-->
<!--          </plugin>-->
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
